##### DONE ##### -------------------------------------------------------------------------------------------------------
...


##### NOW ##### --------------------------------------------------------------------------------------------------------
add storage for entities
    decide on storage strategy
        currently I added an example storage logic for a module
        the thing is, creating such logic for every entity would be very time consuming
        find a way how to automate this process

        I could use @Part @Link @Shared @Cache @Value annotations
            @Cache fields should be skipped
            add helper reflection util class

        now decide if I want to store all entities into separate tables
        or if to store all entities in a single table
        (I like second idea more as we will not need any map tables, but the amount of data can be bigger)

    add logic for id translation among modules

    add saving and loading services for
        MgApplication
        MgModule
        MgDependency
        MgSequence

add export to DML for version control
    export location as folder
    export components into a file
    resources will be just copied to a folder
    also, free form strings might be tricky in this case
        do we want to limit what can be written to a text object?


##### SOON ##### -------------------------------------------------------------------------------------------------------
add test for expression instruction creation service
add test for command instruction creation service
add test for instruction optimization service
add test for rollback


##### LATER ##### -------------------------------------------------------------------------------------------------------
add ui (choose the most suitable toolkit)
    decide if I want to have it auto-generated or manually-generated


##### MAYBE LATER ##### ------------------------------------------------------------------------------------------------
add scheduler(s) for cores or threads ?

add optimization for local (anonymous expression) variable count
    each expression does not have to create new variable, they could reuse existing variables
    in our case it does not matter, it would matter though if exported to another language
    tip: idea for expression variable count
        I think we need at most the number of variables as it is max number of expression parameters
            the only problem with this would be the current implementation of assignment
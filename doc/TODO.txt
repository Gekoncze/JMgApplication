##### DONE ##### -------------------------------------------------------------------------------------------------------
...


##### NOW ##### --------------------------------------------------------------------------------------------------------
think of a way how to do the whole compile process
    there should be a module compile service maybe
        that will go through all its locations
            and it will compile
                classes
                procedures


##### SOON ##### -------------------------------------------------------------------------------------------------------
add test for expression instruction creation service
add test for command instruction creation service
add test for instruction optimization service


##### LATER ##### -------------------------------------------------------------------------------------------------------
add runtime tests
    add test for rollback

do we want to add id for runtime entities too?
    then there would be no such significant difference between statical and runtime entities
    do we want to separate them like that? or shall we just add or not add runtime / static annotation ?
    if we had id also for runtime entities, then we could easily store them for quick save or error dumb file

add storage for statical entities
    I think I will use sqlite
    the question is if we want some version control system or not ...
        we might do something like export to DML
            where we would export each component in a specific file and folder
            blobs would be excluded though
            also, free form strings might be tricky in this case
                do we want to limit what can be written to a text object?

add ui (choose the most suitable toolkit)
    decide if I want to have it auto-generated or manually-generated


##### MAYBE LATER ##### ------------------------------------------------------------------------------------------------
add scheduler(s) for cores or threads ?

add optimization for local (anonymous expression) variable count
    each expression does not have to create new variable, they could reuse existing variables
    in our case it does not matter, it would matter though if exported to another language
    tip: idea for expression variable count
        I think we need at most the number of variables as it is max number of expression parameters
            the only problem with this would be the current implementation of assignment